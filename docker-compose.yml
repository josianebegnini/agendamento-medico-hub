services:
  # üóÑÔ∏è Banco de Dados PostgreSQL
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: agendamento
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d agendamento"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  # ü©∫ Microservi√ßo de M√©dicos
  ms-medico:
    build:
      context: ./ms-medico
    container_name: ms-medico
    restart: always
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/agendamento
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
    depends_on:
      postgres:
        condition: service_healthy

  # üë©‚Äç‚öïÔ∏è Microservi√ßo de Pacientes
  ms-paciente:
    build:
      context: ./ms-paciente
    container_name: ms-paciente
    restart: always
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/agendamento
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
    depends_on:
      postgres:
        condition: service_healthy

  # üìÖ Microservi√ßo de Agenda (usa CloudAMQP)
  ms-agenda:
    build:
      context: ./ms-agenda
    container_name: ms-agenda
    restart: always
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/agendamento
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_RABBITMQ_ADDRESSES: ${CLOUDAMQP_URL}
      SPRING_RABBITMQ_SSL_ENABLED: "true"
    depends_on:
      postgres:
        condition: service_healthy
      ms-medico:
        condition: service_started
      ms-paciente:
        condition: service_started

  # üîê Microservi√ßo de Autentica√ß√£o (JWT)
  ms-auth:
    build:
      context: ./ms-auth
    container_name: ms-auth
    restart: always
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/agendamento
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      JWT_SECRET: mySecretKeyForJWTGenerationThatIsAtLeast32BytesLong
      JWT_EXPIRATION: 3600000
    depends_on:
      postgres:
        condition: service_healthy

  # üåê API Gateway
  gw-agendamento-medico:
    build:
      context: ./gw-agendamento-medico
    container_name: gw-agendamento-medico
    restart: always
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      ms-medico:
        condition: service_started
      ms-paciente:
        condition: service_started
      ms-agenda:
        condition: service_started
      ms-auth:
        condition: service_started

  mail:
    build:
      context: ./mail
    container_name: mail
    ports:
      - "8086:8086"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    depends_on:
      - rabbitmq

  # üíª Front-end (Spring Boot servindo HTML/JS/CSS)
  agendamento-medico-front:
    build:
      context: ./agendamento-medico-front
    container_name: agendamento-medico-front
    restart: always
    ports:
      - "8080:8080"
    environment:
      APP_GATEWAY_BASE_URL: http://gw-agendamento-medico:8085
    depends_on:
      gw-agendamento-medico:
        condition: service_started

volumes:
  postgres_data: